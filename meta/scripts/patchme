#!/bin/bash

# "modifyme" script.

#  Copyright (c) 2010 Wind River Systems, Inc.

#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2 as
#  published by the Free Software Foundation.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU General Public License for more details.

#  This script must be run from inside a Linux source directory

usage()
{
cat << EOF

    patchme [branch] <meta_series>

EOF
}

if [ -d "wrs" ]; then
    meta_dir=wrs
else
    meta_dir=meta
fi

if [ -z "$1" ]; then
	usage
	exit
fi

while [ $# -gt 0 ]; do
	case "$1" in
	    --help)
		usage
		exit
		;;
	    --force)
		force=t
		;;
	    -v) verbose=t
		;;
	    *) break
		;;
	esac
	shift
done

branch=$1
meta_series=$2
CURRENT=`git branch |grep \*|sed 's/^\* //'`

# Expose the data off of the meta branch
decheckpoint()
{
	kgit-checkpoint -r
}

find_meta_series() {
	tgt=$1
	meta_series=`find $meta_dir/cfg/meta -name "$tgt*meta"`
	if [ -z "$meta_series" ]; then
	    echo "ERROR. Could not locate meta series for $tgt"
	    exit 1
	fi
}

do_init() {
	kgit-meta --init $meta_series
	if [ $? -ne 0 ]; then
	    echo "ERROR initializing git tree, exiting"
	    exit 1
	fi
}

do_apply() {
	kgit-meta -v --continue --apply $meta_series
	if [ $? -ne 0 ]; then
	    echo "ERROR. could not update git tree"
	    exit 1
	fi
}

echo $branch | grep -q "/"
if [ $? -eq 0 ]; then
    # remove trailing "/base" since it won't be in the .scc files themselves
    tgt=`echo $branch | sed 's%/base$%%'`
    # the parent branch is the second to last, i.e. standard/common_pc
    # so we can reverse everything and take the second field
    parent=`echo $tgt | rev | cut -d'/' -f2 | rev`
    b=`echo $tgt | rev | cut -d'/' -f1 | rev`
    ktgt=$b-$parent
else
    ktgt=$branch
    parent=`echo $ktgt | rev | cut -d'-' -f1 | rev`
fi

if [ -z "$meta_series" ]; then
    find_meta_series $ktgt
    if [ -z "$meta_series" ]; then
	echo "ERROR. Could not find a meta series for $branch"
	exit 1
    fi
fi

do_init $meta_series
do_apply $meta_series
